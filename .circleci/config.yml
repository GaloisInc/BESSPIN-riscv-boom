# CircleCI Configuration File

# version of circleci
version: 2

# set of jobs to run
jobs:
    install-riscv-tools:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building riscv-tools
                command: |
                    .circleci/build-riscv-tools.sh
                no_output_timeout: 120m
            - save_cache:
                key: riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
                paths:
                    - "/home/riscvuser/riscv-tools-install"
    prepare-build-environment:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Build Verilator and setup build environment
                command: |
                    .circleci/prepare-for-rtl-build.sh
                no_output_timeout: 120m
            - save_cache:
                key: chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-smallrv32unifiedboomconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building SmallRV32UnifiedBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh SmallRV32UnifiedBoomConfig
                no_output_timeout: 120m
            - save_cache:
                key: smallrv32unifiedboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-smallboomconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building SmallBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh SmallBoomConfig
                no_output_timeout: 120m
            - save_cache:
                key: smallboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-mediumboomconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building MediumBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh MediumBoomConfig
                no_output_timeout: 120m
            - save_cache:
                key: mediumboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-largeboomconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building LargeBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh LargeBoomConfig
                no_output_timeout: 120m
            - save_cache:
                key: largeboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-megaboomconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building MegaBoomConfig using Verilator
                command: .circleci/do-rtl-build.sh MegaBoomConfig
                no_output_timeout: 120m
            - save_cache:
                key: megaboomconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"
    prepare-smallboomandrocketconfig:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - checkout
            - restore_cache:
                keys:
                    - chipyard-with-verilator-v9-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Building SmallBoomAndRocketConfig using Verilator
                command: .circleci/do-rtl-build.sh SmallBoomAndRocketConfig
                no_output_timeout: 120m
            - save_cache:
                key: smallboomandrocketconfig-{{ .Branch }}-{{ .Revision }}
                paths:
                    - "/home/riscvuser/chipyard"

    run-scala-checkstyle:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - run:
                name: Run Scala checkstyle
                command: make checkstyle

    smallrv32unifiedboomconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallrv32unifiedboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallRV32UnifiedBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh SmallRV32UnifiedBoomConfig 50
                no_output_timeout: 30m

    smallrv32unifiedboomconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallrv32unifiedboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallRV32UnifiedBoomConfig riscv tests
                command: |
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=SmallRV32UnifiedBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    smallboomconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh SmallBoomConfig 50
                no_output_timeout: 30m

    smallboomconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomConfig riscv tests
                command: |
                    make run-bmark-tests-fast -C ../chipyard/sims/verisim CONFIG=SmallBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=SmallBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    mediumboomconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - mediumboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MediumBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh MediumBoomConfig 50
                no_output_timeout: 30m

    mediumboomconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - mediumboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MediumBoomConfig riscv tests
                command: |
                    make run-bmark-tests-fast -C ../chipyard/sims/verisim CONFIG=MediumBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=MediumBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    largeboomconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - largeboomconfig-{{ .Branch }}-{{ .Revision }}

            - run:
                name: Run LargeBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh LargeBoomConfig 50
                no_output_timeout: 30m

    largeboomconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - largeboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run LargeBoomConfig riscv tests
                command: |
                    make run-bmark-tests-fast -C ../chipyard/sims/verisim CONFIG=LargeBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=LargeBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    megaboomconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - megaboomconfig-{{ .Branch }}-{{ .Revision }}

            - run:
                name: Run MegaBoomConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh MegaBoomConfig 50
                no_output_timeout: 30m

    megaboomconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - megaboomconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run MegaBoomConfig riscv tests
                command: |
                    make run-bmark-tests-fast -C ../chipyard/sims/verisim CONFIG=MegaBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=MegaBoomConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    smallboomandrocketconfig-run-csmith-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallboomandrocketconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomAndRocketConfig csmith tests
                command: .circleci/build-run-csmith-tests.sh SmallBoomAndRocketConfig 50
                no_output_timeout: 30m

    smallboomandrocketconfig-run-riscv-tests:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - restore_cache:
                keys:
                    - smallboomandrocketconfig-{{ .Branch }}-{{ .Revision }}
            - run:
                name: Run SmallBoomAndRocketConfig riscv tests
                command: |
                    make run-bmark-tests-fast -C ../chipyard/sims/verisim CONFIG=SmallBoomAndRocketConfig SUB_PROJECT=boom TOP=BoomRocketSystem
                    make run-asm-tests-fast -C ../chipyard/sims/verisim CONFIG=SmallBoomAndRocketConfig SUB_PROJECT=boom TOP=BoomRocketSystem

    copy-riscv-tools-environment:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - checkout
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - restore_cache:
                keys:
                    - riscv-tools-installed-v3-{{ checksum "CHIPYARD.hash" }}
            - run:
                name: Move riscv-tools to remote server
                command: |
                    .circleci/cleanup-ext.sh
                    .circleci/move-tools-ext.sh
                no_output_timeout: 120m

    clean-environment:
        docker:
            - image: riscvboom/riscvboom-images:0.0.6
        environment:
            JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit
            TERM: dumb
        steps:
            - add_ssh_keys:
                fingerprints:
                    - "e7:69:4e:24:88:f6:cd:7c:62:da:51:03:54:c4:7f:ec"
            - run:
                name: Clean up files on remote server
                command: .circleci/cleanup-ext.sh
                no_output_timeout: 120m

# Order and dependencies of jobs to run
workflows:
    version: 2
    build-and-test-boom-configs:
        jobs:
            # Make the toolchain
            - install-riscv-tools

            # Build verilator
            - prepare-build-environment:
                requires:
                    - install-riscv-tools

            # Run generic syntax checking
            - run-scala-checkstyle:
                requires:
                    - install-riscv-tools

            # Move files to remote
            - copy-riscv-tools-environment:
                requires:
                    - prepare-build-environment

            # Prepare the verilator builds
            - prepare-smallrv32unifiedboomconfig:
                requires:
                    - copy-riscv-tools-environment
            - prepare-smallboomconfig:
                requires:
                    - copy-riscv-tools-environment
            - prepare-mediumboomconfig:
                requires:
                    - copy-riscv-tools-environment
            - prepare-smallboomandrocketconfig:
                requires:
                    - copy-riscv-tools-environment

            # Clean up environment after build
            - clean-environment:
                requires:
                    - prepare-smallrv32unifiedboomconfig
                    - prepare-smallboomconfig
                    - prepare-mediumboomconfig
                    - prepare-smallboomandrocketconfig

            # Run the SmallRV32UnifiedBoomConfig tests
            - smallrv32unifiedboomconfig-run-riscv-tests:
                requires:
                    - prepare-smallrv32unifiedboomconfig

            # Run the SmallBoomConfig tests
            - smallboomconfig-run-csmith-tests:
                requires:
                    - prepare-smallboomconfig
            - smallboomconfig-run-riscv-tests:
                requires:
                    - prepare-smallboomconfig

            # Run the MediumBoomConfig tests
            - mediumboomconfig-run-csmith-tests:
                requires:
                    - prepare-mediumboomconfig
            - mediumboomconfig-run-riscv-tests:
                requires:
                    - prepare-mediumboomconfig

            # Run the SmallBoomAndRocketConfig tests
            - smallboomandrocketconfig-run-csmith-tests:
                requires:
                    - prepare-smallboomandrocketconfig
            - smallboomandrocketconfig-run-riscv-tests:
                requires:
                    - prepare-smallboomandrocketconfig
